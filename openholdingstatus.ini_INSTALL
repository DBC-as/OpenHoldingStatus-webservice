; Inifile for openholdingstatus

[setup]
version = 1.1

; To close a service, set service_http_error
; service status - values:
;service_http_error = HTTP/1.0 404 Not Found
;service_http_error = HTTP/1.1 410 Gone
;service_http_error = HTTP/1.0 503 Service Unavailable

; wsdl for service
wsdl = openholdingstatus.wsdl

; validate
;validate[request] = openholdingstatus.xsd
;validate[response] = openholdingstatus.xsd

; soapActions and their corresponding request structure
; Can be found in the wsdl but is stated here for convenience
soapAction[holdings] = holdingsRequest
soapAction[localisations] = localisationsRequest

; prefixes and namespaces
xmlns[] = http://oss.dbc.dk/ns/openholdingstatus

; path to xml-examples
xmldir = ./xml

; logfile for verbose output
logfile = /tmp/openholdingstatus.log

; set verboselevel
;   WARNING - simple warnings
;   ERROR   - errors in response
;   FATAL   - major errors
;   STAT    - Stat√≠stical logging
;   TIMER   - timer logging
;   TRACE   - program trace
;   DEBUG   - debugging info
;   Z3959   - calls to z3950 services
;   OCI     - oracle
verbose = WARNING+ERROR+FATAL+STAT+TIMER+TRACE+DEBUG+Z3950+OCI

; url to holdings-/localization-service from openHolding
ols_get_holdings = http://some.server.dk:9080/holdings-service/getAllHoldings?requestOrderBib=%s&pid=%s

; url to get request_order sequence from openAgency
agency_request_order = http://some_open_agency.server.dk/?action=requestOrder&agencyId=%s
; url to get server information from openAgency
agency_server_information = http://some_open_agency.server.dk/?action=service&service=serverInformation&agencyId=%s


[aaa]
; aaa Authentication, Access control and Accounting
;
; if aaa_credentials is set, the rights-object is created from
; the FORS-server or aaa_ip_rights below
;
; oci credentials for FORS server
;aaa_credentials = ora_user/ora_passwd@some.server.dk
;aaa_credentials = next_vip_kig/next@tora1.dbc.dk
; memcache server - use localhost in one-webserver environment
;aaa_cache_address = localhost:11211
; number of seconds to cache authentication and access rights info
;aaa_cache_seconds = 3600
;
; As an alternative to FORS rights, rights can be set here for selected ip-addresses
; aaa_ip_rights[group-identifier][ip_list] = commaseparated list of ip's
; aaa_ip_rights[group-identifier][ressource][<named ressource>] = right to <named ressource>
; aaa_ip_rights[group-identifier][ressource][<named ressource 2>] = right to <named ressource 2>
;
;aaa_ip_rights[dbc][ip_list] = 172.16.0.0-172.31.255.255;193.111.162.0-193.111.162.255
;aaa_ip_rights[dbc][ressource]['netpunkt.dk'] = 500



[rest]
; REST parameters for SOAPactions
;
; use xml.path.to.par notation to solve name-conflicts
; action[thisSoapAction][foo][] = some.number
; action[thisSoapAction][bar][] = another.number
; to build 
; <thisSoapAction>
;   <foo>
;     <number>nn</number>
;   </foo>
;   <bar>
;     <number>mm</number>
;   </bar>
; </thisSoapAction>
; from url: action=thisSoapAction&some.number=nn&another.number=mm
;
action[holdings][authentication][] = groupIdAut
action[holdings][authentication][] = passwordAut
action[holdings][authentication][] = userIdAut
action[holdings][lookupRecord][] = responderId
action[holdings][lookupRecord][] = bibliographicRecordId
action[holdings][lookupRecord][] = bibliographicRecordAgencyId
action[holdings][] = callback
action[holdings][] = outputType

action[localisations][authentication][] = groupIdAut
action[localisations][authentication][] = passwordAut
action[localisations][authentication][] = userIdAut
action[localisations][] = agencyId
action[localisations][] = pid
action[localisations][] = mergePids
action[localisations][] = callback
action[localisations][] = outputType


[howru]
;test[] = holdings&responderId=DK-790900&bibliographicRecordId=12343&bibliographicRecordAgencyId=DK-710100
;preg_match[] = willLend
;error[] = ERROR checking for holdings
